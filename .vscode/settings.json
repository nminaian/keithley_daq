{
  //! Terminal
  //? Use PowerShell on all platforms, facilitates running template scripts
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.defaultProfile.linux": "pwsh",
  "terminal.integrated.defaultProfile.osx": "pwsh",
  //! File excludes
  "files.exclude": {
    //? Cache directory set in `pyproject.toml`
    "**/.cache": true,
    //? Python
    "**/__pycache__": true,
    "**/.jupyter_cache": true,
    "**/.pytest_cache/": true,
    //? Attempt to prevent picking up temporary Pylance files in Problems pane
    "**/*pylance-notebook-cell*": true
  },
  "search.exclude": {
    //? Template clutters quick-open
    "submodules/template": true,
    //? Type stubs clutter quick-open
    "submodules/typings": true,
    //? Locks clutter searches
    "tools/lock.json": true
  },
  //! File nesting
  "explorer.sortOrder": "foldersNestsFiles",
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    //? Prevents file nesting from hijacking brand new files before setting filename
    "*.root": ".*, a*, b*, c*, d*, e*, f*, g*, h*, i*, j*, k*, l*, m*, n*, o*, p*, q*, r*, s*, t*, u*, v*, w*, x*, y*, z*, 0*, 1*, 2*, 3*, 4*, 5*, 6*, 7*, 8*, 9*, _*, -*, {*"
  },
  //! File associations
  "files.associations": {
    ".coveragerc": "ini",
    ".env": "dotenv",
    ".pylintrc": "ini",
    ".root": "plaintext",
    ".sourcery.yaml": "yaml",
    "*ipython-input*": "python",
    "*requirements*.in": "pip-requirements",
    "pyrightconfig.json": "jsonc"
  },
  //! Git
  "git.allowNoVerifyCommit": true,
  "git.confirmNoVerifyCommit": false,
  "git.commandsToLog": ["commit", "push"],
  //! Line-width
  "git.inputValidationSubjectLength": 88,
  "git.inputValidationLength": 1e100,
  "editor.wordWrapColumn": 88,
  "editor.rulers": [88],
  "scm.inputMaxLineCount": 50,
  "scm.inputMinLineCount": 3,
  "[scminput]": {
    "editor.rulers": [88]
  },
  //! pytest
  "python.testing.unittestEnabled": false,
  "python.testing.pytestEnabled": true,
  //! Formatting
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.wordWrap": "bounded",
  "files.eol": "\n",
  "files.insertFinalNewline": true,
  "files.refactoring.autoSave": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "notebook.insertFinalNewline": false,
  "notebook.formatOnCellExecution": true,
  "notebook.formatOnSave.enabled": true,
  //! Code Actions
  "editor.codeActionsOnSave": {
    "source.fixAll": "always",
    "source.organizeImports": "always"
  },
  "notebook.codeActionsOnSave": {
    "notebook.source.fixAll": "explicit",
    "source.organizeImports": "explicit"
  },
  //! Extensions
  //* autoDocstring
  "autoDocstring.docstringFormat": "numpy-notypes",
  //* GitHub Actions
  "github-actions.workflows.pinned.workflows": [".github/workflows/ci.yml"],
  //* Jupyter Notebooks
  "jupyter.notebookFileRoot": "${workspaceFolder}",
  "jupyter.showVariableViewWhenDebugging": true,
  //* MyST
  "myst.preview.extensions": ["colon_fence", "dollarmath"],
  // * Python
  "python.terminal.activateEnvInCurrentTerminal": true,
  //* Pylance
  "python.languageServer": "Pylance",
  "python.analysis.diagnosticMode": "openFilesOnly",
  "python.analysis.typeCheckingMode": "strict",
  "editor.inlayHints.enabled": "offUnlessPressed",
  "python.analysis.autoFormatStrings": true,
  "python.analysis.autoImportCompletions": true,
  "python.analysis.extraCommitChars": true,
  "python.analysis.gotoDefinitionInStringLiteral": true,
  "python.analysis.importFormat": "absolute",
  "python.analysis.inlayHints.callArgumentNames": "all",
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.inlayHints.pytestParameters": true,
  "python.analysis.inlayHints.variableTypes": true,
  //* Rewrap
  "rewrap.wrappingColumn": 88,
  "rewrap.wholeComment": false,
  //* Sourcery
  "sourcery.codeLens": false,
  //* vscode-icons
  "workbench.iconTheme": "vscode-icons",
  "vsicons.presets.hideExplorerArrows": true,
  "vsicons.dontShowNewVersionMessage": false,
  //! Filetype extensions
  //* Markdownlint (MD)
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
  },
  //* Prettier (JSON, JSONC, YAML)
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[powershell]": {
    "editor.defaultFormatter": "ms-vscode.powershell",
    "editor.wordWrap": "off"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.wordWrap": "off"
  },
  "[github-actions-workflow]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.wordWrap": "off"
  },
  "yaml.format.printWidth": 88,
  //* ruff (PY, IPYNB)
  "ruff.importStrategy": "fromEnvironment",
  "ruff.lint.args": ["--config", "pyproject.toml"],
  "ruff.format.args": ["--config", "pyproject.toml"],
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff",
    "editor.wordWrap": "off"
  },
  "[ipynb]": {
    "editor.defaultFormatter": "charliermarsh.ruff",
    "editor.wordWrap": "off"
  },
  //* Even Better TOML (TOML)
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "evenBetterToml.formatter.columnWidth": 88,
  //! Other
  //? Other automatically added settings below
  "": ""
}
